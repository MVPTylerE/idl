; >>>> begin comments
;==========================================================================================
;
; >>>> McObject Class: sdi2k_math_histplot
;
; This file contains the McObject method code for sdi2k_math_histplot objects:
;
; Mark Conde Fairbanks, November 2000.
;
; >>>> end comments
; >>>> begin declarations
;         menu_name = Histogram Plotter
;        class_name = sdi2k_math_histplot
;       description = SDI Analysis - Histogram Plotter
;           purpose = SDI analysis
;       idl_version = 5.2
;  operating_system = Windows NT4.0 terminal server 
;            author = Mark Conde
; >>>> end declarations

@sdi2k_ncdf.pro

;==========================================================================================
; This is the (required) "new" method for this McObject:

pro sdi2k_math_histplot_new, instance, dynamic=dyn, creator=cmd
;---First, properties specific to this object:
    cmd = 'instance = {sdi2k_math_histplot, '
    cmd = cmd + 'specific_cleanup: ''sdi2k_math_histplot_specific_cleanup'', '    
    histplot_behavior = {histplot_behavior, prompt_for_filename: 1, $
                           menu_configurable: 1, $
                               user_editable: [0]} 
    histplot_scale = {histplot_scale, auto_scale: 1, $
                                      xrange: [0., 1.], $
                                       nbins: 25, $
                           menu_configurable: 1, $
                               user_editable: [0,1,2]} 
    cmd = cmd + 'behavior: histplot_behavior, '
    cmd = cmd + 'scale: histplot_scale, '
    cmd = cmd + 'parameter: 5, '
    cmd = cmd + 'zones: "All", '
;---Now add fields common to all SDI objects. These will be grouped as sub-structures:
    sdi2k_common_fields, cmd, automation=automation, geometry=geometry
;---Next, add the required fields, whose specifications are read from the 'declarations'
;   section of the comments at the top of this file:
    whoami, dir, file    
    obj_reqfields, dir+file, cmd, dynamic=dyn
;---Now, create the instance:
    status = execute(cmd)
end

;==========================================================================================
; This is the event handler for events generated by the sdi2k_math_histplot object:
pro sdi2k_math_histplot_event, event
    widget_control, event.top, get_uvalue=info
    wid_pool, 'Settings: ' + info.wtitle, widx, /get
    if not(widget_info(widx, /valid_id)) then return
    widget_control, widx, get_uvalue=histplot_settings
    if widget_info(event.id, /valid_id) and histplot_settings.automation.show_on_refresh then widget_control, event.id, /show

;---Check for a timer tick:    
    if tag_names(event, /structure_name) eq 'WIDGET_TIMER' then begin
       sdi2k_math_histplot_tik, info.wtitle
       if histplot_settings.automation.timer_ticking then widget_control, widx, timer=histplot_settings.automation.timer_interval
       return
    endif
    
;---Get the menu name for this event:
    widget_control, event.id, get_uvalue=menu_item
    
    if menu_item eq 'View|Plot Parameter' then sdi2k_histplot_getpar, info.wtitle
    if menu_item eq 'View|Zone Usage'     then sdi2k_histplot_zones,  info.wtitle
    sdi2k_histplot_data, info.wtitle    
    if n_elements(menu_item) eq 0 then menu_item = 'Nothing valid was selected'
end

;==========================================================================================
; This is the routine that handles timer ticks:
pro sdi2k_math_histplot_tik, wtitle, redraw=redraw, _extra=_extra
@sdi2kinc.pro
    sdi2k_histplot_data, wtitle
end

pro sdi2k_histplot_getpar, wtitle
@sdi2kinc.pro
    common histplot_resarr, resarr

    wid_pool, wtitle, widx, /get
    if not(widget_info(widx, /valid_id)) then return
    widget_control, widx, get_uvalue=info
    wid_pool, 'Settings: ' + wtitle, sidx, /get
    if not(widget_info(sidx, /valid_id)) then return
    widget_control, sidx, get_uvalue=histplot_settings

    nz = total(host.operation.zones.sectors(0:host.operation.zones.fov_rings-1))
    for j=0, n_tags(resarr(0))-1 do begin
        if n_elements(resarr(0).(j)) eq nz then begin
           if n_elements(skies) eq 0 then skies = j else skies = [skies, j]
        endif
    endfor
    skynames = tag_names(resarr(0))
    skynames = sentence_case(skynames(skies))
    mcchoice, 'Select a parameter:', skynames, choice
    histplot_settings.parameter = skies(choice.index)
    widget_control, sidx, set_uvalue=histplot_settings
end

pro sdi2k_histplot_zones, wtitle
@sdi2kinc.pro
    wid_pool, wtitle, widx, /get
    if not(widget_info(widx, /valid_id)) then return
    widget_control, widx, get_uvalue=info
    wid_pool, 'Settings: ' + wtitle, sidx, /get
    if not(widget_info(sidx, /valid_id)) then return
    widget_control, sidx, get_uvalue=histplot_settings

    nz = total(host.operation.zones.sectors(0:host.operation.zones.fov_rings-1))
    zz = strarr(nz)
    for j=0,nz-1 do zz(j) = 'Zone ' + strcompress(string(j), /remove_all)
    mcchoice, 'Select zone usage:', ['All', 'Zenith', 'Median', zz], choice
    histplot_settings.zones = choice.name
    widget_control, sidx, set_uvalue=histplot_settings
end

pro sdi2k_histplot_data, wtitle
@sdi2kinc.pro
    common histplot_resarr, resarr
    common histplot_tlist, datestr
;---Get settings information for this instance of the output xwindow and this instance of 
;   the plot program itself:
    wid_pool, wtitle, widx, /get
    if not(widget_info(widx, /valid_id)) then return
    widget_control, widx, get_uvalue=info
    wid_pool, 'Settings: ' + wtitle, sidx, /get
    if not(widget_info(sidx, /valid_id)) then return
    widget_control, sidx, get_uvalue=histplot_settings
    
    if !d.name ne 'Z' and !d.name ne 'PS' then wset, info.wid

    sdi2k_histogram_plotter, tlist, tcen, datestr, resarr, histplot_settings

;---Check if we need to make a GIF file:
    ;sdi2k_plugin_gif, info, js_time=timlimz(1)
end

;==========================================================================================
;   Cleanup jobs:
pro sdi2k_math_histplot_specific_cleanup, widid
@sdi2kinc.pro
end

;==========================================================================================
; This is the (required) "autorun" method for this McObject. If no autorun action is 
; needed, then this routine should simply exit with no action:

pro sdi2k_math_histplot_autorun, instance
@sdi2kinc.pro
    common histplot_resarr, resarr
    common histplot_tlist, datestr
    device, get_screen_size=box
    instance.geometry.xsize = 0.95*box(0)
    instance.geometry.ysize = 0.75*box(1)
    instance.automation.timer_interval = 1.
    instance.automation.timer_ticking = 0
    sdi2k_reset_spectra

    if instance.behavior.prompt_for_filename then begin
       fitfile = dialog_pickfile(file=fitfile, $
                                 filter='*.' + host.operation.header.site_code, $
                                 group=widx, title='Select a file of sky spectra: ', $
                                 path=host.operation.logging.log_directory)                                 
    endif

    sdi2k_ncopen, fitfile, ncid, 0
    if n_elements(resarr) gt 0 then undefine, resarr
    sdi2k_build_fitres, ncid, resarr
    sdi2k_drift_correct, resarr, source_file=fitfile
    sdi2k_physical_units, resarr
    sdi2k_read_exposure, host.netcdf(0).ncid, 0
    ctime = host.programs.spectra.start_time + host.programs.spectra.integration_seconds/2
    datestr = dt_tm_mk(js2jd(0d)+1, ctime, format='0d$ n$ Y$')
    ncdf_close, ncid
    host.netcdf(0).ncid = -1
    
    mc_menu, extra_menu, 'View',           1, event_handler='sdi2k_math_histplot_event', /new
    mc_menu, extra_menu, 'Plot Parameter', 0, event_handler='sdi2k_math_histplot_event'
    mc_menu, extra_menu, 'Zone Usage',     0, event_handler='sdi2k_math_histplot_event'
    mc_menu, extra_menu, 'Redraw',         2, event_handler='sdi2k_math_histplot_event'
    mnu_xwindow_autorun, instance, topname='sdi2ka_top', extra_menu=extra_menu
    
    sdi2k_histplot_getpar, instance.description
    sdi2k_histplot_zones,  instance.description
    sdi2k_histplot_data,   instance.description
 end

;==========================================================================================
; This is the (required) class method for creating a new instance of the sdi2k_math_histplot object. It
; would normally be an empty procedure.  Nevertheless, it MUST be present, as the last procedure in 
; the methods file, and it MUST have the same name as the methods file.  By calling this
; procedure, the caller forces all preceeding routines in the methods file to be compiled, 
; and so become available for subsequent use:

pro sdi2k_math_histplot
end

