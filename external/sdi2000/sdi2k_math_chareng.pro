; >>>> begin comments
;==========================================================================================
;
; >>>> McObject Class: sdi2k_math_chareng
;
; This file contains the McObject method code for sdi2k_math_chareng objects:
;
; Mark Conde Fairbanks, October 2000.
;
; >>>> end comments
; >>>> begin declarations
;         menu_name = 5577 Characteristic Energy Mapper
;        class_name = sdi2k_math_chareng
;       description = SDI Analysis - Plot 5577 Characteristic Energy
;           purpose = SDI analysis
;       idl_version = 5.2
;  operating_system = Windows NT4.0 terminal server
;            author = Mark Conde
; >>>> end declarations

@sdi2k_ncdf.pro

;==========================================================================================
; This is the (required) "new" method for this McObject:

pro sdi2k_math_chareng_new, instance, dynamic=dyn, creator=cmd
;---First, properties specific to this object:
    common chareng_resarr, resarr, smootharr
    cmd = 'instance = {sdi2k_math_chareng, '
    cmd = cmd + 'specific_cleanup: ''sdi2k_math_chareng_specific_cleanup'', '
    chareng_behavior = {chareng_behavior, prompt_for_filename: 1, $
                          menu_configurable: 0, $
                              user_editable: [1]}
    chareng_scale = {chareng_scale, auto_scale: 0, $
                                      yrange: [0., 5.], $
                           menu_configurable: 1, $
                               user_editable: [0,1]}
    chareng_geom  = {chareng_geom, viewing_from_above: 0, $
                              radius_maps_to_distance: 0, $
                                       north_rotation: 0, $
                                    menu_configurable: 1, $
                                        user_editable: [0,1,2]}     
    chareng_msis  = {chareng_msis,   plot_msis: 1, $
                                      f10pt7: 180., $
                                          ap: 15., $
                                 msis_height: [95.0, 300.0], $
                           menu_configurable: 1, $
                               user_editable: [0,1,2,3]}     
    rex = [0, n_elements(resarr)-1]
    smoothing = {chareng_smoothing,    temperature_time_smoothing: 1., $
                             temperature_spatial_smoothing: 0.08, $
                                menu_configurable: 1, $
                                    user_editable: [0,1]}

    cmd = cmd + 'behavior: chareng_behavior, '
    cmd = cmd + 'scale: chareng_scale, '
    cmd = cmd + 'smooth_settings: smoothing, '
    cmd = cmd + 'msis: chareng_msis, '
    cmd = cmd + 'map_view: chareng_geom, '
    cmd = cmd + 'parameter: 9, '
    cmd = cmd + 'black_bgnd: 1, '
    cmd = cmd + 'records: rex, '
;---Now add fields common to all SDI objects. These will be grouped as sub-structures:
    sdi2k_common_fields, cmd, automation=automation, geometry=geometry
;---Next, add the required fields, whose specifications are read from the 'declarations'
;   section of the comments at the top of this file:
    whoami, dir, file
    obj_reqfields, dir+file, cmd, dynamic=dyn
;---Now, create the instance:
    status = execute(cmd)
end

;==========================================================================================
; This is the event handler for events generated by the sdi2k_math_chareng object:
pro sdi2k_math_chareng_event, event
    common skymap_tlist, tlist, datestr
    common chareng_resarr, resarr, smootharr
    widget_control, event.top, get_uvalue=info
    wid_pool, 'Settings: ' + info.wtitle, sidx, /get
    if not(widget_info(sidx, /valid_id)) then return
    widget_control, sidx, get_uvalue=chareng_settings
    if widget_info(event.id, /valid_id) and chareng_settings.automation.show_on_refresh then widget_control, event.id, /show

;---Check for a timer tick:
    if tag_names(event, /structure_name) eq 'WIDGET_TIMER' then begin
       sdi2k_math_chareng_tik, info.wtitle
       if chareng_settings.automation.timer_ticking then widget_control, sidx, timer=chareng_settings.automation.timer_interval
       return
    endif

;---Get the menu name for this event:
    widget_control, event.id, get_uvalue=menu_item

    if menu_item eq 'View|Time Chooser' then begin
       mcchoice, 'Start time:', tlist, choice
       chareng_settings.records(0) = choice.index
       mcchoice, 'End time:', tlist, choice
       chareng_settings.records(1) = choice.index
       widget_control, sidx, set_uvalue=chareng_settings
    endif

    if menu_item eq 'View|Smooth Temperatures' then begin
       wot = resarr(chareng_settings.records(0):chareng_settings.records(1)).temperature
       print, 'Smoothing Temperatures in Time...'
       sdi2k_timesmooth_fits, wot, chareng_settings.smooth_settings.temperature_time_smoothing, /progress
       print, 'Smoothing Temperatures in Space...'
       sdi2k_spacesmooth_fits, wot, chareng_settings.smooth_settings.temperature_spatial_smoothing, /progress
       smootharr(chareng_settings.records(0):chareng_settings.records(1)).temperature = wot
    endif

    if menu_item eq 'View|Toggle Background Color' then begin
       chareng_settings.black_bgnd = 1 - chareng_settings.black_bgnd
       widget_control, sidx, set_uvalue=chareng_settings
    endif

    if menu_item eq 'View|Plot Parameter' then sdi2k_chareng_getpar, info.wtitle

    sdi2k_math_chareng_plot, info.wtitle
    if n_elements(menu_item) eq 0 then menu_item = 'Nothing valid was selected'
end

pro sdi2k_chareng_getpar, wtitle
@sdi2kinc.pro
    common chareng_resarr, resarr, smootharr

    wid_pool, wtitle, widx, /get
    if not(widget_info(widx, /valid_id)) then return
    widget_control, widx, get_uvalue=info
    wid_pool, 'Settings: ' + wtitle, sidx, /get
    if not(widget_info(sidx, /valid_id)) then return
    widget_control, sidx, get_uvalue=chareng_settings


    mcchoice, 'Select a parameter:', ['msis_height', 'characteristic energy'], choice
    chareng_settings.parameter = choice.index + 8
    case choice.index of
       0:    begin
             chareng_settings.scale.auto_scale = 0
             chareng_settings.scale.yrange = [100., 200.]
             end
       1:    begin
             chareng_settings.scale.auto_scale = 0
             chareng_settings.scale.yrange = [0., 3.]
             end
        else: begin
             chareng_settings.scale.auto_scale = 1
             end
    endcase
    widget_control, sidx, set_uvalue=chareng_settings
end

;==========================================================================================
; This is the routine that handles timer ticks:
pro sdi2k_math_chareng_tik, wtitle, redraw=redraw, _extra=_extra
    sdi2k_math_chareng_plot, wtitle
@sdi2kinc.pro
end

;===========================================================================================
;
;   This does the actual plotting:

pro sdi2k_math_chareng_plot, wtitle
@sdi2kinc.pro
    common chareng_resarr, resarr, smootharr
    common skymap_tlist,  tlist, datestr
;---Get settings information for this instance of the output xwindow and this instance of
;   the plot program itself:
    wid_pool, wtitle, widx, /get
    if not(widget_info(widx, /valid_id)) then return
    widget_control, widx, get_uvalue=info
    wid_pool, 'Settings: ' + wtitle, sidx, /get
    if not(widget_info(sidx, /valid_id)) then return
    widget_control, sidx, get_uvalue=chareng_settings

    if n_elements(zone_canvas) eq 0 then return

	msis_dll  = 'd:\users\conde\main\idl\msis\idlmsis.dll'
	if not(file_test(msis_dll)) then msis_dll = 'c:\users\conde\main\idl\msis\idlmsis.dll'
	if not(file_test(msis_dll)) then msis_dll = 'e:\users\conde\main\idl\msis\idlmsis.dll'
    if not(file_test(msis_dll)) then msis_dll = 'c:\users\conde\main\idl\msis\idlmsis.dll'
    lat   = float(host.operation.header.latitude)
    lon   = float(host.operation.header.longitude)
    if lon lt 0 then lon = lon+360.
    f107  = float(chareng_settings.msis.f10pt7)
    f107a = f107
    ap    = fltarr(7)
    mass  = 48L
    t     = fltarr(2)
    d     = fltarr(8)
    delz  = 10. ; model profile height increment in km
    
    lumm_height = 100. + findgen(11)*10.
    lumm_charen = [6.3, 2.5, 1.7, 0.96, 0.76, 0.52, 0.4, 0.3, 0.22, 0.18, 0.11] 

    nz = total(host.operation.zones.sectors(0:host.operation.zones.fov_rings-1))
    for j=0,n_elements(smootharr)-1 do begin 
        tcen = (smootharr(j).start_time + smootharr(j).end_time)/2.
      	         yyddd  = long(dt_tm_mk(js2jd(0d)+1, tcen, format='doy$'))
      	         js2ymds, tcen, yy, mm, dd, ss
      	         ss     = float(ss)
      	         lst    = ss/3600. + lon/15.
      	         if lst lt 0  then lst = lst + 24.
      	         if lst gt 24 then lst = lst - 24.
      	         ap(0)  = chareng_settings.msis.ap
    ; 	          print, yyddd, ss, lat, lon, lst, f107a, f107, ap, mass
                 for alt = chareng_settings.msis.msis_height(0),chareng_settings.msis.msis_height(1),delz do begin
       	             result = call_external(msis_dll,'msis90', $
      	                                    yyddd, ss, alt, lat, lon, lst, f107a, f107, ap, mass, d, t)
      	             if alt eq chareng_settings.msis.msis_height(0) then msis_vals = t(1) else msis_vals = [msis_vals, t(1)]
      	         endfor
      	         nc = 0
		 for zidx=0,nz-1 do begin
		     smootharr(j).msis_height(zidx) = chareng_settings.msis.msis_height(0)
		     colder = where(msis_vals lt smootharr(j).temperature(zidx), nc)
		     if nc gt 0 then begin
		        loidx = colder(n_elements(colder)-1)
		        hiidx = loidx + 1
		        smootharr(j).msis_height(zidx) = chareng_settings.msis.msis_height(1)
		        if hiidx le n_elements(msis_vals) - 1 then begin
		           hlo = chareng_settings.msis.msis_height(0) + loidx*delz
		           hhi = hlo + delz
		           hgt = hlo + delz*(smootharr(j).temperature(zidx) - msis_vals(loidx))/(msis_vals(hiidx) - msis_vals(loidx))
 		           smootharr(j).msis_height(zidx) = hgt
 		           
 		           lower = where(lumm_height lt hgt, nc)
 		           smootharr(j).characteristic_energy(zidx) = lumm_charen(0)
 		           if nc gt 0 then begin
		              loidx = lower(n_elements(lower)-1)
		              hiidx = loidx + 1
		              smootharr(j).characteristic_energy(zidx) = lumm_charen(n_elements(lumm_charen)-1)
		              if hiidx le n_elements(lumm_charen) - 1 then begin
		                 elo = lumm_charen(loidx)
		                 ehi = lumm_charen(hiidx)
		                 nrg = elo + (ehi - elo)*(hgt - lumm_height(loidx))/(lumm_height(hiidx) - lumm_height(loidx))
		                 smootharr(j).characteristic_energy(zidx) = nrg
		              endif 		              
 		           endif
 		        endif
		     endif
		 endfor
      	      
    endfor

    if !d.name ne 'Z' and !d.name ne 'PS' then wset, info.wid

    sdi2k_sky_mapper, tlist, tcen, datestr, smootharr, chareng_settings, $
                      map_view=chareng_settings.map_view.viewing_from_above, $
                      azimuth_rotation=chareng_settings.map_view.north_rotation

;---Check if we need to make a GIF file:
    ;sdi2k_plugin_gif, info, js_time=timlimz(1)
end

;==========================================================================================
;   Cleanup jobs:
pro sdi2k_math_chareng_specific_cleanup, widid
@sdi2kinc.pro
    close, /all
;    ncdf_close, host.netcdf(0).ncid
;    host.netcdf(0).ncid = -1
end

;==========================================================================================
; This is the (required) "autorun" method for this McObject. If no autorun action is
; needed, then this routine should simply exit with no action:

pro sdi2k_math_chareng_autorun, instance
@sdi2kinc.pro
    common chareng_resarr, resarr, smootharr
    common skymap_tlist, tlist, datestr
    device, get_screen_size=box
    instance.geometry.xsize = 0.9*box(0)
    instance.geometry.ysize = 0.85*min(box) + 100
    instance.automation.timer_interval = 1.
    instance.automation.timer_ticking = 0
    if instance.behavior.prompt_for_filename then begin
       spekfile = dialog_pickfile(file=skyfile, $
                                 filter='*.' + host.operation.header.site_code, $
                                 group=widx, title='Select a file of sky spectra: ', $
                                 path=host.operation.logging.log_directory)
    endif

    sdi2k_ncopen, spekfile, ncid, 0
    if n_elements(resarr) gt 0 then undefine, resarr
    sdi2k_build_fitres, ncid, resarr
    sdi2k_remove_radial_residual, resarr, parname='TEMPERATURE'
    sdi2k_physical_units, resarr
    smootharr = resarr
;    if n_elements(zone_map) lt 1 then sdi2k_build_zone_map, canvas_size = [0.95*min(box), 0.95*min(box)], /map_project
    sdi2k_build_zone_map, canvas_size = [0.95*min(box), 0.95*min(box)], /map_project
    ncdf_diminq, ncid, ncdf_dimid(ncid, 'Time'),    dummy,  maxrec
    record = 0
    tlist = strarr(maxrec)
    for rec=record,maxrec-1 do begin
        sdi2k_read_exposure, ncid, rec
        tcen = host.programs.spectra.start_time + host.programs.spectra.integration_seconds/2
        hhmm = dt_tm_mk(js2jd(0d)+1, tcen, format='h$:m$')
        tlist(rec) =  hhmm
    endfor
    sdi2k_read_exposure, host.netcdf(0).ncid, 0
    ctime = host.programs.spectra.start_time + host.programs.spectra.integration_seconds/2
    datestr = dt_tm_mk(js2jd(0d)+1, ctime, format='0d$ n$ Y$')

    ncdf_close, host.netcdf(0).ncid
    host.netcdf(0).ncid = -1
    instance.records = [0, n_elements(tlist)-1]

    mc_menu, extra_menu, 'View',                    1, event_handler='sdi2k_math_chareng_event', /new
    mc_menu, extra_menu, 'Plot Parameter',          0, event_handler='sdi2k_math_chareng_event'
    mc_menu, extra_menu, 'Time Chooser',            0, event_handler='sdi2k_math_chareng_event'
    mc_menu, extra_menu, 'Smooth Temperatures',     0, event_handler='sdi2k_math_chareng_event'
    mc_menu, extra_menu, 'Toggle Background Color', 0, event_handler='sdi2k_math_chareng_event'
    mc_menu, extra_menu, 'Redraw',         2, event_handler='sdi2k_math_chareng_event'
    mnu_xwindow_autorun, instance, topname='sdi2ka_top', extra_menu=extra_menu

    print, 'WARNING: Maps hard-wired to map_projected!'

    sdi2k_math_chareng_plot, instance.description
end

;==========================================================================================
; This is the (required) class method for creating a new instance of the sdi2k_math_chareng object. It
; would normally be an empty procedure.  Nevertheless, it MUST be present, as the last procedure in
; the methods file, and it MUST have the same name as the methods file.  By calling this
; procedure, the caller forces all preceeding routines in the methods file to be compiled,
; and so become available for subsequent use:

pro sdi2k_math_chareng
end

